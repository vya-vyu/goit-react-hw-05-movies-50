{"version":3,"file":"static/js/149.2c3aea90.chunk.js","mappings":"oKAiBA,IAhBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAOP,EAAlC,SACGI,GAASC,KAFLF,EADC,KASjB,C,mHCOD,EApBkB,WAChB,OAA0BK,EAAAA,EAAAA,MAAjBC,GAAT,eACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAKA,OACE,kBAAMC,SALY,SAAAC,GAClBA,EAAEC,iBACFN,EAAc,CAAEE,MAAOA,GACxB,EAEC,WACE,kBACEK,KAAK,OACLX,KAAK,SACLY,MAAON,EACPO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOF,MAAtB,KAEb,mBAAQD,KAAK,SAAb,sBAGL,E,SCGD,EAlBe,WACb,OAAqBR,EAAAA,EAAAA,MAAdY,GAAP,eAEA,GAA4BV,EAAAA,EAAAA,UAAS,MAArC,eAAOX,EAAP,KAAesB,EAAf,KACMV,EAAQS,EAAWE,IAAI,SAM7B,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBb,GAAOc,MAAK,SAAAC,GAAG,OAAIL,EAAUK,EAAd,GAChC,GAAE,CAACf,KAGF,iCACE,SAAC,EAAD,IACCZ,IAAU,SAAC4B,EAAA,EAAD,CAAY5B,OAAQA,MAGpC,C,oKCjBD6B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOF,EAAAA,EAAAA,IACA,mBAAoB,CACvBG,OAAQ,CACNC,QAASH,KAGZJ,MAAK,SAAAC,GAAG,OAAIA,EAAIO,KAAKC,OAAb,GACZ,EACYC,EAAkB,SAAAhC,GAC7B,OAAOyB,EAAAA,EAAAA,IAAA,gBACSzB,GAAM,CAClB4B,OAAQ,CACNC,QAASH,KAGZJ,MAAK,SAAAC,GAAG,OAAIA,EAAIO,IAAR,GACZ,EAEYG,EAAe,SAAAjC,GAC1B,OAAOyB,EAAAA,EAAAA,IAAA,gBACSzB,EADT,YACuB,CAC1B4B,OAAQ,CACNC,QAASH,KAGZJ,MAAK,SAAAC,GAAG,OAAIA,EAAIO,KAAKI,IAAb,GACZ,EACYC,EAAkB,SAAAnC,GAC7B,OAAOyB,EAAAA,EAAAA,IAAA,gBACSzB,EADT,YACuB,CAC1B4B,OAAQ,CACNC,QAASH,KAGZJ,MAAK,SAAAC,GAAG,OAAIA,EAAIO,KAAKC,OAAb,GACZ,EAEYV,EAAkB,SAAAb,GAC7B,OAAOiB,EAAAA,EAAAA,IAAA,eACgB,CACnBG,OAAQ,CACNC,QAASH,EACTlB,MAAAA,KAGHc,MAAK,SAAAC,GAAG,OAAIA,EAAIO,KAAKC,OAAb,GACZ,C","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title, name }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={location}>\n            {title || name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\nconst SerchForm = () => {\n  const [, setSearchName] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const handlSubmit = e => {\n    e.preventDefault();\n    setSearchName({ query: query });\n  };\n  return (\n    <form onSubmit={handlSubmit}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SerchForm;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SerchForm from 'components/SearchForm/SearchForm';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getSearchMovies } from 'services/moviesApi';\nconst Movies = () => {\n  const [searchName] = useSearchParams();\n\n  const [movies, setMovies] = useState(null);\n  const query = searchName.get('query');\n\n  useEffect(() => {\n    getSearchMovies(query).then(res => setMovies(res));\n  }, [query]);\n\n  return (\n    <>\n      <SerchForm />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n//r\nexport default Movies;\n","// 71607835e81913adcb88d2b7747ce54e\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '71607835e81913adcb88d2b7747ce54e';\n\nexport const getTrendingMovies = () => {\n  return axios\n    .get('trending/all/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data.results);\n};\nexport const getMovieDetails = id => {\n  return axios\n    .get(`movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data);\n};\n\nexport const getMovieCast = id => {\n  return axios\n    .get(`movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data.cast);\n};\nexport const getMovieReviews = id => {\n  return axios\n    .get(`movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(res => res.data.results);\n};\n\nexport const getSearchMovies = query => {\n  return axios\n    .get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    })\n    .then(res => res.data.results);\n};\n"],"names":["movies","location","useLocation","map","id","title","name","to","state","useSearchParams","setSearchName","useState","query","setQuery","onSubmit","e","preventDefault","type","value","onChange","target","searchName","setMovies","get","useEffect","getSearchMovies","then","res","MoviesList","axios","API_KEY","getTrendingMovies","params","api_key","data","results","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}